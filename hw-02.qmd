---
title: "HW 02"
author: "Yashi Mi"
format: 
  html:
    embed-resources: true
toc: true
---

```{r}
# - loading package manager
if (!require(pacman))
  install.packages(pacman)

# - loading required packages
pacman::p_load(tidyverse,
               dsbox,
               forcats,
               ggplot2,
               ggridges,
               scales)
```

\## 1 - A new day, a new plot, a new geom

```{r}
#| label: label-me-1
data(edibnb)
glimpse(edibnb)
```

```{r}
edibnb |>
  filter(!is.na (neighbourhood), !is.na (review_scores_rating)) |>
  mutate(neighbourhood = fct_reorder(neighbourhood, review_scores_rating, .fun = median)) |>
ggplot(aes(x = review_scores_rating, y= neighbourhood))+
  geom_density_ridges (scale = 4)+
  labs(title = "Airbnb Review Scores by Neighborhood",
       x = "Review Score",
       y = "Neighborhood")+
  theme_minimal(base_size = 14)




```

::: callout-note
This ridgeline plot clearly shows the order of Edinburgh neighborhoods based on their median Airbnb review scores. It also visualizes the distribution of review scores within each neighborhood, helping to identify both the central tendency and variability of ratings. This figure could be useful for potential customers to compare neighborhoods.
:::

## 2 - Foreign Connected PACs

```{r}
#| label: label-me-2
library(fs)
# The following code is cited from the course homework page
# get a list of files with "Foreign Connected PAC" in their names
list_of_files <- dir_ls(path = "data", regexp = "Foreign Connected PAC")

# read all files and row bind them
# keeping track of the file name in a new column called year
pac <- read_csv(list_of_files, id = "year")
glimpse(pac)
```

```{r}
library(tidyverse)
library(janitor)
pac_clean <- pac |>
  clean_names()
pac_clean <- pac_clean |>
# Code for extracting years using regex inspired by solutions found online
   mutate(year = map_chr(year, ~ str_extract_all(.x, "\\d{4}")[[1]][2]),year = as.integer(year))|>
   mutate(country_of_origin_parent_company = word (country_of_origin_parent_company,1,sep = "/")) 
glimpse(pac_clean)
```

```{r}
pac_long <- pac_clean |>
  pivot_longer(cols = c("dems","repubs"),
              names_to = "party",
              values_to = "amount")
glimpse(pac_long)
```

```{r}
pac_long <- pac_long |>
  mutate(amount = as.numeric(gsub("\\$", "", amount)))
UK <- pac_long |>
 filter(country_of_origin_parent_company == "UK") |>
  group_by(year, party)  |>
  summarise(total_amount_of_contributions = sum(amount,na.rm = TRUE), .groups = "drop")
glimpse(UK)
```

```{r}

UK |> ggplot(aes(x = year, y = total_amount_of_contributions, color = party))+
  geom_line(linewidth = 0.8)+
  labs(x = "Year", y = "Total amount",
       title = "Contribution to US political partifes from UK-connected PACs", caption = "Source:OpenSecrets.org")+
  scale_color_manual(values = c("dems" = "blue", "repubs" = "red"),
                     labels = c("dems" = "Democrat", "repubs" = "Republican"))+
  scale_y_continuous(labels = label_dollar(scale = 1e-6, suffix = "M"))+
  theme_minimal(base_size = 14)+
  theme(legend.position.inside = c(0.85,0.15),
        axis.title.x = element_text(hjust = 0, size = 11),
        axis.title.y = element_text(hjust = 0, size = 11),
        plot.title = element_text(size = 11))
```

```{r}
pac_long <- pac_long |>
  mutate(amount = as.numeric(gsub("\\$", "", amount)))
Japan <- pac_long |>
 filter(country_of_origin_parent_company == "Japan") |>
  group_by(year, party)  |>
  summarise(total_amount_of_contributions = sum(amount,na.rm = TRUE), .groups = "drop")
glimpse(Japan)
```

```{r}
library(scales)
Japan |> ggplot(aes(x = year, y = total_amount_of_contributions, color = party))+
  geom_line(linewidth = 0.8)+
  labs(x = "Year", y = "Total amount",
       title = "Contribution to US political partifes from Japan-connected PACs", caption = "Source:OpenSecrets.org")+
  scale_color_manual(values = c("dems" = "blue", "repubs" = "red"),
                     labels = c("dems" = "Democrat", "repubs" = "Republican"))+
    scale_y_continuous(labels = label_dollar(scale = 1e-6, suffix = "M"))+
  theme_minimal(base_size = 14)+
  theme(legend.position.inside =  c(0.85,0.15),
        axis.title.x = element_text(hjust = 0, size = 11),
        axis.title.y = element_text(hjust = 0, size = 11),
        plot.title = element_text(size = 11))
```

::: callout-note
I recreated a similar visualization to analyze Japan-connected PACs' contributions to U.S. political parties over the past 20 years. Overall, Japan’s contributions have steadily increased during this period. Before 2010, contributions to Democrats and Republicans were relatively balanced. However, starting around 2010, there was a noticeable shift: Japan-connected PACs began contributing significantly more to Republican candidates compared to Democrats.
:::

## 3 - Median housing prices in the US

```{r}
library(here)
median_housing <- read_csv(here("data","median-housing.csv"))
glimpse(median_housing)

recessions <- read_csv(here("data","recessions.csv"))
glimpse(recessions)
```

```{r}
median_housing <- median_housing|>
  mutate (data = DATE, price = MSPUS)
glimpse(median_housing)
```

```{r}
ggplot(median_housing, aes(x = data, y = price))+
  geom_line(color = "blue",linewidth = 0.8)+
  scale_y_continuous(breaks = seq(0,400000,40000), labels = comma) +
  scale_x_date(date_breaks = "5 years",date_labels = "%Y") +
  labs(x = "",
       y = "Dollars",
       caption = "Sources: Census; HUD",
       title = "Median sales price of houses sold in the United States", subtitle = "Not seasonally ajusted")+
  theme_minimal(base_size = 14)+
  theme (plot.title = element_text(hjust = 0),
         plot.subtitle = element_text(hjust = 0),
         panel.grid.minor = element_blank(),
         panel.grid.major.x = element_blank())
```

```{r}
earlist<- min(median_housing$data)
glimpse(earlist)
latest<- max(median_housing$data)
glimpse(latest)
recessions <- recessions |>
   mutate(recessions_happened = case_when(
    Peak <= latest & Trough >= earlist ~ TRUE,
    TRUE ~ FALSE))
glimpse(recessions)
```

```{r}
recessions_new <- recessions |>
  filter(recessions_happened)
ggplot()+
  geom_rect(data = recessions_new,aes(xmin = Peak, xmax = Trough, ymin = -Inf, ymax = Inf), fill = "gray", alpha = 0.5)+
  geom_line(data = median_housing, aes(x = data, y = price), color = "blue")+
  scale_y_continuous(breaks = seq(0,400000,40000), labels = comma) +
  scale_x_date(date_breaks = "5 years",date_labels = "%Y") +
  labs(x = "",
       y = "Dollars",
       caption = "Shaded areas indicate U.S. recessions\nSources: Census; HUD",
       title = "Median sales price of houses sold in the United States", subtitle = "Not seasonally ajusted")+
  theme_minimal(base_size = 14)+
  theme (plot.title = element_text(hjust = 0),
         plot.subtitle = element_text(hjust = 0),
         panel.grid.minor = element_blank(),
         panel.grid.major.x = element_blank())

```

```{r}
median_housing_subset <-median_housing|>
  filter( data >= "2019-01-01" & data <= "2020-12-31")
glimpse(median_housing_subset)
median_housing_subset <- median_housing_subset|>
  mutate(year = year(data), month = month(data),
  quarter = case_when(month %in% c(1,2,3) ~ "Q1",
                     month %in% c(4,5,6) ~ "Q2",
                     month %in% c(7,8,9) ~ "Q3",
                     TRUE ~ "Q4"),
  year_quarter = factor(paste(year, quarter), 
      levels = c("2019 Q1", "2019 Q2", "2019 Q3", "2019 Q4",
                "2020 Q1", "2020 Q2", "2020 Q3", "2020 Q4")))
 
glimpse(median_housing_subset)
```

```{r}
ggplot(median_housing_subset, aes(x = year_quarter, y = price))+
  geom_line(aes(group = 1),color = "blue" )+
  geom_point( fill = "white", shape = 21, color = "blue" )+
  scale_y_continuous(breaks = seq(300000,360000,20000), labels = comma) +
  labs(x = "",
       y = "Dollars",
       title = "Median sales price of houses sold in the United States", subtitle = "Not seasonally ajusted")+
  theme_minimal(base_size = 14)+
  theme (plot.title = element_text(hjust = 0),
         plot.subtitle = element_text(hjust = 0),
         panel.grid.minor = element_blank(),
         panel.grid.major.x = element_blank())
```

## 4 - Expect More. Plot More.

```{r}
library(tidyverse)
library(ggforce)
circle1 <- tibble(x_point = 0, y_point = 0, r = 1.5, fill = "#cc0000")
circle2 <- tibble(x_point = 0, y_point = 0, r = 1, fill = "white")
circle3 <- tibble(x_point = 0, y_point = 0, r = 0.5, fill = "#cc0000")
# target color from "https://www.brandcolorcode.com/target".
ggplot() +
  geom_circle(data = circle1, aes(x0 = x_point, y0 = y_point,r = r, fill = fill), color = NA)+
  geom_circle(data = circle2, aes(x0 = x_point, y0 = y_point,r = r, fill = fill), color = NA)+
  geom_circle(data = circle3, aes(x0 = x_point, y0 = y_point,r = r, fill = fill), color = NA)+
    scale_fill_identity()+
    coord_fixed() +
    theme_void()+
    annotate("text", x = 0, y = -2, label = "TARGET", size = 6, fontface = "bold", color = "#cc0000")

```

::: callout-note
The first idea that came to mind when recreating the Target logo was to use three circles with different radii. To achieve this, I used geom_circle() from the ggforce package.

First, I created a dataset using tibble, which includes the x and y coordinates, their radii, and fill colors. Then, I used geom_circle() to draw each of the three circles.

The function scale_fill_identity() was used to preserve the exact color values, while coord_fixed() ensured that the x and y axes remained in a 1:1 ratio so the circles were not distorted. I removed all axes and grid lines using theme_void(). Lastly, I added the word “TARGET” below the logo using annotate().
:::

## 5 - Mirror, mirror on the wall, who’s the ugliest of them all?

```{r}
library(palmerpenguins)
penguins <- penguins |>
  filter(! is.na(flipper_length_mm))
glimpse(penguins)
```

```{r}
ggplot (penguins, aes(x = species,  y = flipper_length_mm))+
  geom_point()
  
```

```{r}
ggplot (penguins, aes(x = species,  y = flipper_length_mm))+
  geom_point(color="red", size=8)+
  theme(panel.background=element_rect(fill="yellow"),
       panel.grid.major = element_line(color = "blue"),
       axis.title = element_text(color="green", hjust=1, size = 15))
```
